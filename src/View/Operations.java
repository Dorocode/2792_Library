/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Dao.BookDao;
import Dao.CheckInDao;
import Dao.CheckOutDao;
import Dao.ClientDao;
import Model.Book;
import Model.Client;
import Model.Returnedbook;
import Model.Withdrowbook;
import java.io.BufferedOutputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.text.MessageFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @author Mugara Steven
 */
public class Operations extends javax.swing.JInternalFrame {

    /**
     * Creates new form Operations
     */
    Returnedbook returnedbook;
    Withdrowbook withdrowbook;
    CheckInDao checkindao;
    CheckOutDao checkoutdao;
    DefaultTableModel model;
    DefaultTableModel model2;
    public Operations() {
        initComponents();
        populateComboBoxNameForCheckOut();
        populateComboBoxBookNameForCheckOut();
        populateComboBoxBookForCheckIn();
        populateComboBoxBookNameForCheckIn();
        model = (DefaultTableModel) inTable.getModel();
        model2 = (DefaultTableModel) outTable.getModel();
        returnedbook = new Returnedbook();
        checkindao = new CheckInDao();
        withdrowbook = new Withdrowbook();
        checkoutdao = new CheckOutDao();
        populateCheckInTable();
        populateCheckOutTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    public void populateCheckInTable() {
        List<Returnedbook> returnbooks = new ArrayList<>();
        returnbooks = checkindao.listofReturnedBook();

        for (Returnedbook ret : returnbooks) {
            model.insertRow(model.getRowCount(), new Object[]{
                ret.getClientName(),
                ret.getBookName(),
                ret.getStatus(),
                ret.getDates()
            });
        }
    }
    public void populateCheckOutTable() {
        List<Withdrowbook> withdrowBooks = new ArrayList<>();
        withdrowBooks = checkoutdao.listofwithdrowBook();

        for (Withdrowbook with : withdrowBooks) {
            model2.insertRow(model2.getRowCount(), new Object[]{
                with.getClientName(),
                with.getBookName(),
                with.getStatus(),
                with.getDates()
            });
        }
    }
    public void populateComboBoxNameForCheckOut() {
        ClientDao obj = new ClientDao();
        List<Client> client = new ArrayList<>();
        client = obj.ListClient();
        String names;
        for (Client cli : client) {
            names = (cli.getFirstName() + " " + cli.getLastName());
            nameCombout.addItem(String.valueOf(names));
        }
    }
    public void populateComboBoxBookNameForCheckOut() {
        BookDao obj = new BookDao();
        List<Book> book = new ArrayList<>();
        book = obj.listBook();
        for (Book boo : book) {
            bookComout.addItem(String.valueOf(boo.getBookId()));
        }
    }
    public void populateComboBoxBookNameForCheckIn() {
        checkoutdao = new CheckOutDao();
        List<Withdrowbook> withdrowClientName = new ArrayList<>();
        withdrowClientName = checkoutdao.listofwithdrowBook();
        for (Withdrowbook with : withdrowClientName) {
            nameCombin.addItem(String.valueOf(with.getClientName()));
        }
    }

    public void populateComboBoxBookForCheckIn() {
        checkoutdao = new CheckOutDao();
        List<Withdrowbook> withdrowbookName = new ArrayList<>();
        withdrowbookName = checkoutdao.listofwithdrowBook();
        for (Withdrowbook with : withdrowbookName) {
            bookCombin.addItem(String.valueOf(with.getBookName()));
        }
    }
    
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        jPanel2 = new javax.swing.JPanel();
        jTabbedPane4 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        nameCombin = new javax.swing.JComboBox<>();
        bookCombin = new javax.swing.JComboBox<>();
        jPanel11 = new javax.swing.JPanel();
        checkInBtn = new javax.swing.JButton();
        excelBtnin = new javax.swing.JButton();
        pdfBtnin = new javax.swing.JButton();
        searchInfield = new javax.swing.JTextField();
        searchinbtn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        inTable = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        nameCombout = new javax.swing.JComboBox<>();
        bookComout = new javax.swing.JComboBox<>();
        jPanel9 = new javax.swing.JPanel();
        checkoutBtn = new javax.swing.JButton();
        excelBtnout = new javax.swing.JButton();
        pdfBtnout = new javax.swing.JButton();
        searchoutbtn = new javax.swing.JButton();
        searchoutfield = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        outTable = new javax.swing.JTable();

        jMenuItem1.setText("jMenuItem1");

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);

        jTabbedPane4.setFont(new java.awt.Font("Pristina", 1, 18)); // NOI18N

        jPanel1.setBackground(new java.awt.Color(0, 153, 153));

        jPanel10.setBackground(new java.awt.Color(204, 204, 255));
        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), "CHECK_IN_FORM", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Pristina", 1, 24))); // NOI18N

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setText("Name:");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setText("Book:");

        jPanel11.setBackground(new java.awt.Color(153, 204, 255));
        jPanel11.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        checkInBtn.setFont(new java.awt.Font("Pristina", 1, 14)); // NOI18N
        checkInBtn.setText("Check_In");
        checkInBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkInBtnActionPerformed(evt);
            }
        });

        excelBtnin.setFont(new java.awt.Font("Pristina", 1, 14)); // NOI18N
        excelBtnin.setText("Export_EXCEL");
        excelBtnin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                excelBtninActionPerformed(evt);
            }
        });

        pdfBtnin.setFont(new java.awt.Font("Pristina", 1, 14)); // NOI18N
        pdfBtnin.setText("Export_PDF");
        pdfBtnin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pdfBtninActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(pdfBtnin)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                        .addComponent(checkInBtn)
                        .addGap(34, 34, 34))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                        .addComponent(excelBtnin)
                        .addContainerGap())))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(checkInBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pdfBtnin)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(excelBtnin)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        searchinbtn.setText("Search");
        searchinbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchinbtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(bookCombin, 0, 162, Short.MAX_VALUE)
                            .addComponent(nameCombin, 0, 162, Short.MAX_VALUE)))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(searchinbtn)
                        .addGap(1, 1, 1)
                        .addComponent(searchInfield, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(nameCombin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel8)
                            .addComponent(bookCombin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(37, 37, 37)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(searchinbtn)
                            .addComponent(searchInfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 13, Short.MAX_VALUE))
        );

        inTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "BookId", "Status", "Date"
            }
        ));
        jScrollPane2.setViewportView(inTable);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 474, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(48, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        jTabbedPane4.addTab("CHECK_IN", jPanel1);

        jPanel3.setBackground(new java.awt.Color(0, 102, 153));

        jPanel8.setBackground(new java.awt.Color(0, 153, 153));
        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), "CHECK_OUT_FORM", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Pristina", 1, 24))); // NOI18N

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Name:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("Book:");

        jPanel9.setBackground(new java.awt.Color(0, 204, 204));
        jPanel9.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        checkoutBtn.setFont(new java.awt.Font("Pristina", 1, 14)); // NOI18N
        checkoutBtn.setText("Check_out");
        checkoutBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkoutBtnActionPerformed(evt);
            }
        });

        excelBtnout.setFont(new java.awt.Font("Pristina", 1, 14)); // NOI18N
        excelBtnout.setText("Export_EXCEL");
        excelBtnout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                excelBtnoutActionPerformed(evt);
            }
        });

        pdfBtnout.setFont(new java.awt.Font("Pristina", 1, 14)); // NOI18N
        pdfBtnout.setText("Export_PDF");
        pdfBtnout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pdfBtnoutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addContainerGap(32, Short.MAX_VALUE)
                .addComponent(checkoutBtn)
                .addGap(34, 34, 34))
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(pdfBtnout))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(excelBtnout)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(checkoutBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pdfBtnout)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(excelBtnout)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        searchoutbtn.setText("Search");
        searchoutbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchoutbtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(searchoutbtn)
                        .addGap(1, 1, 1)))
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(bookComout, 0, 162, Short.MAX_VALUE)
                    .addComponent(nameCombout, 0, 162, Short.MAX_VALUE)
                    .addComponent(searchoutfield))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(nameCombout, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel6)
                    .addComponent(bookComout, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchoutbtn)
                    .addComponent(searchoutfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23))
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 11, Short.MAX_VALUE))
        );

        outTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "BookId", "Status", "Date"
            }
        ));
        jScrollPane3.setViewportView(outTable);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 495, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(31, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(32, Short.MAX_VALUE))
        );

        jTabbedPane4.addTab("CHECK_OUT", jPanel3);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane4, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane4, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void checkoutBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkoutBtnActionPerformed
        // TODO add your handling code here:
        String client = nameCombout.getSelectedItem().toString();
        String book = bookComout.getSelectedItem().toString();
        String status = "Student";

        String dates = new SimpleDateFormat("yyyy-MM-dd").format(new Date(System.currentTimeMillis()));

        withdrowbook = new Withdrowbook(book, client, status, dates);
        try {
            checkoutdao.savecheckout(withdrowbook);
            JOptionPane.showMessageDialog(null, "Saved To Book Withrow List !!!!", "System", JOptionPane.INFORMATION_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Student Have Other Book !!!!", "Database Error", JOptionPane.QUESTION_MESSAGE);
        }
        model2.setRowCount(0);
        populateCheckOutTable();

         //Reflesh ComboBox For Check in
        populateComboBoxBookNameForCheckIn();
        populateComboBoxBookForCheckIn();
        
    }//GEN-LAST:event_checkoutBtnActionPerformed

    private void checkInBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkInBtnActionPerformed
        // TODO add your handling code here:
         String client = nameCombin.getSelectedItem().toString();
        String book = bookCombin.getSelectedItem().toString();
        String status = "Student";
        String dates = new SimpleDateFormat("yyy-MM-dd").format(new Date(System.currentTimeMillis()));
        returnedbook = new Returnedbook(book, client, status, dates);
        Withdrowbook with = new Withdrowbook();
        try{
            checkindao.saveCheckIn(returnedbook);
            with.setBookName(book);
            checkoutdao.delete(book);
            JOptionPane.showMessageDialog(null, "Saved To Returned Book List !!!!", "System", JOptionPane.INFORMATION_MESSAGE);
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "Saved To Retured Book List !!!!", "System", JOptionPane.INFORMATION_MESSAGE);
        }
        model.setRowCount(0);
        populateCheckInTable();

        model2.setRowCount(0);
        populateCheckOutTable();
    }//GEN-LAST:event_checkInBtnActionPerformed

    private void excelBtninActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_excelBtninActionPerformed
        // TODO add your handling code here:
        MessageFormat header = new MessageFormat("LIST OF STUDENT RETURNED BOOK");
        MessageFormat footer = new MessageFormat("Page{0, number, integer}");
        try {
            inTable.print(JTable.PrintMode.NORMAL, header, footer);
            JOptionPane.showMessageDialog(null, "Exported Successfull !!!");
        } catch (java.awt.print.PrinterException e) {
            System.err.format("Can not Print", e.getMessage());
        }
    }//GEN-LAST:event_excelBtninActionPerformed

    private void excelBtnoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_excelBtnoutActionPerformed
        // TODO add your handling code here:
        FileOutputStream excelFOU = null;
        BufferedOutputStream excelBOU = null;
        XSSFWorkbook excelJTableExporter = null;

        JFileChooser excelFileChooser = new JFileChooser();
        excelFileChooser.setDialogTitle("Save As");
        FileNameExtensionFilter fnef = new FileNameExtensionFilter("Excel Files", "xls", "xlsx", "xlsm");
        excelFileChooser.setFileFilter(fnef);
        int excellChooser = excelFileChooser.showSaveDialog(null);

        if (excellChooser == JFileChooser.APPROVE_OPTION) {

            try {
                String excelImagePath = "";

                excelJTableExporter = new XSSFWorkbook();
                XSSFSheet excelSheet = excelJTableExporter.createSheet("JTable Sheet");
                for (int i = 0; i < model2.getRowCount(); i++) {
                    XSSFRow excelRow = excelSheet.createRow(i);
                    for (int j = 0; j < model2.getColumnCount(); j++) {
                        XSSFCell excelCell = excelRow.createCell(j);

                        excelCell.setCellValue(model2.getValueAt(i, j).toString());
                    }
                }
                excelFOU = excelFOU = new FileOutputStream(excelFileChooser.getSelectedFile() + ".xlsx");
                excelBOU = new BufferedOutputStream(excelFOU);
                excelJTableExporter.write(excelBOU);
                JOptionPane.showMessageDialog(null, "Exported Successfull !!!");
            } catch (FileNotFoundException ex) {
                ex.printStackTrace();
            } catch (IOException ex) {
                ex.printStackTrace();
            } finally {
                try {
                    if (excelBOU != null) {
                        excelBOU.close();
                    }
                    if (excelFOU != null) {
                        excelFOU.close();
                    }

                    if (excelJTableExporter != null) {
                        excelJTableExporter.close();
                    }
                    excelFOU.close();
                } catch (IOException ex) {
                    ex.printStackTrace();
                }
            }
        }
    }//GEN-LAST:event_excelBtnoutActionPerformed

    private void pdfBtninActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pdfBtninActionPerformed
        // TODO add your handling code here:
        FileOutputStream excelFOU = null;
        BufferedOutputStream excelBOU = null;
        XSSFWorkbook excelJTableExporter = null;

        JFileChooser excelFileChooser = new JFileChooser();
        excelFileChooser.setDialogTitle("Save As");
        FileNameExtensionFilter fnef = new FileNameExtensionFilter("Excel Files", "xls", "xlsx", "xlsm");
        excelFileChooser.setFileFilter(fnef);
        int excellChooser = excelFileChooser.showSaveDialog(null);

        if (excellChooser == JFileChooser.APPROVE_OPTION) {

            try {
                String excelImagePath = "";

                excelJTableExporter = new XSSFWorkbook();
                XSSFSheet excelSheet = excelJTableExporter.createSheet("JTable Sheet");
                for (int i = 0; i < model.getRowCount(); i++) {
                    XSSFRow excelRow = excelSheet.createRow(i);
                    for (int j = 0; j < model.getColumnCount(); j++) {
                        XSSFCell excelCell = excelRow.createCell(j);

                        excelCell.setCellValue(model.getValueAt(i, j).toString());
                    }
                }
                excelFOU = excelFOU = new FileOutputStream(excelFileChooser.getSelectedFile() + ".xlsx");
                excelBOU = new BufferedOutputStream(excelFOU);
                excelJTableExporter.write(excelBOU);
                JOptionPane.showMessageDialog(null, "Exported Successfull !!!");
            } catch (FileNotFoundException ex) {
                ex.printStackTrace();
            } catch (IOException ex) {
                ex.printStackTrace();
            } finally {
                try {
                    if (excelBOU != null) {
                        excelBOU.close();
                    }
                    if (excelFOU != null) {
                        excelFOU.close();
                    }

                    if (excelJTableExporter != null) {
                        excelJTableExporter.close();
                    }
                    excelFOU.close();
                } catch (IOException ex) {
                    ex.printStackTrace();
                }
            }
        }
    }//GEN-LAST:event_pdfBtninActionPerformed

    private void pdfBtnoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pdfBtnoutActionPerformed
        // TODO add your handling code here:
        MessageFormat header = new MessageFormat("LIST OF STUDENT DIDN'T RETURNED BOOK");
        MessageFormat footer = new MessageFormat("Page{0, number, integer}");
        try {
            outTable.print(JTable.PrintMode.NORMAL, header, footer);
            JOptionPane.showMessageDialog(null, "Exported Successfull !!!");
        } catch (java.awt.print.PrinterException e) {
            System.err.format("Can not Print", e.getMessage());
        }
    }//GEN-LAST:event_pdfBtnoutActionPerformed

    private void searchinbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchinbtnActionPerformed
        // TODO add your handling code here:
        String client = searchInfield.getText();
        try{
            checkindao.searClient(client);
            JOptionPane.showMessageDialog(null, client+ " Does Not Exist In Our Client", "System", JOptionPane.INFORMATION_MESSAGE);
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, client +" Haven't Book !!!!", "System", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_searchinbtnActionPerformed

    private void searchoutbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchoutbtnActionPerformed
        // TODO add your handling code here:
        String client = searchoutfield.getText();
        try{
            checkindao.searClient(client);
            JOptionPane.showMessageDialog(null, client+ " Had Been Returned Book !!!!", "System", JOptionPane.INFORMATION_MESSAGE);
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, client + " Haven't Returned Book !!!!", "System", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_searchoutbtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> bookCombin;
    private javax.swing.JComboBox<String> bookComout;
    private javax.swing.JButton checkInBtn;
    private javax.swing.JButton checkoutBtn;
    private javax.swing.JButton excelBtnin;
    private javax.swing.JButton excelBtnout;
    private javax.swing.JTable inTable;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane4;
    private javax.swing.JComboBox<String> nameCombin;
    private javax.swing.JComboBox<String> nameCombout;
    private javax.swing.JTable outTable;
    private javax.swing.JButton pdfBtnin;
    private javax.swing.JButton pdfBtnout;
    private javax.swing.JTextField searchInfield;
    private javax.swing.JButton searchinbtn;
    private javax.swing.JButton searchoutbtn;
    private javax.swing.JTextField searchoutfield;
    // End of variables declaration//GEN-END:variables
}
